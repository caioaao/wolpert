version: 2

jobs:
  build-and-test:
    docker:
      - image: circleci/python:3.6.3
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -U pip
            pip install -r dev_tools/requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}
          paths:
            - "venv"
      - run:
          command: |
            . venv/bin/activate
            pytest wolpert

  deploy:
    docker:
      - image: circleci/python:3.6.3
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}
      - run:
          name: install deploy dependencies
          command: |
            . venv/bin/activate
            pip install wheel
            pip install twine
      - save_cache:
          key: deps1-{{ .Branch }}
          paths:
            - "venv"
      - run:
          name: verify git tag
          command: |
            . venv/bin/activate
            python setup.py verify
      - run:
          name: create pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = caioaao" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create and deploy packages
          command: |
            . venv/bin/activate
            python setup.py sdist
            python setup.py bdist_wheel
            twine upload dist/*

  build-and-test-py2:
    docker:
      - image: circleci/python:2.7.15
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-py2
      - run:
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install -r dev_tools/requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-py2
          paths:
            - "venv"
      - run:
          command: |
            . venv/bin/activate
            pytest wolpert

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /.*/
      - build-and-test-py2:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build-and-test
            - build-and-test-py2
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
